[{"name":"app.R","content":"# Direct copy of https://github.com/rstudio/shiny/blob/3edf9bfad8ad69a93f744a4f63447442d23e7c9a/inst/examples-shiny/01_hello/app.R\n\nlibrary(shiny)\nlibrary(bslib)\n\n# Define UI for app that draws a histogram ----\nui <- page_sidebar(\n\n  # App title ----\n  title = \"Hello Shiny!\",\n\n  # Sidebar panel for inputs ----\n  sidebar = sidebar(\n\n    # Input: Slider for the number of bins ----\n    sliderInput(\n      inputId = \"bins\",\n      label = \"Number of bins:\",\n      min = 1,\n      max = 50,\n      value = 30\n    )\n  ),\n\n  # Output: Histogram ----\n  plotOutput(outputId = \"distPlot\")\n)\n\n# Define server logic required to draw a histogram ----\nserver <- function(input, output) {\n  # Histogram of the Old Faithful Geyser Data ----\n  # with requested number of bins\n  # This expression that generates a histogram is wrapped in a call\n  # to renderPlot to indicate that:\n  #\n  # 1. It is \"reactive\" and therefore should be automatically\n  #    re-executed when inputs (input$bins) change\n  # 2. Its output type is a plot\n  output$distPlot <- renderPlot({\n    x <- faithful$waiting\n    bins <- seq(min(x), max(x), length.out = input$bins + 1)\n\n    hist(\n      x,\n      breaks = bins,\n      col = \"#75AADB\",\n      border = \"white\",\n      xlab = \"Waiting time to next eruption (in mins)\",\n      main = \"Histogram of waiting times\"\n    )\n  })\n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"README.md","content":"# Starter shinylive app for R/Pharma 2024\n\nSteps to complete:\n* Clone this repo to your personal GitHub\n* Enable publishing of website through GitHub Actions\n  * Settings > Pages > Build and Deploymentâ€¨> Source > GitHub Actions\n* Set up auto exporting of app\n  * ```r\n    usethis::use_github_action(\n      url = \"https://github.com/posit-dev/r-shinylive/blob/actions-v1/examples/deploy-app.yaml\"\n    )\n    ```\n* View website\n* ...\n* Profit!\n","type":"text"}]
